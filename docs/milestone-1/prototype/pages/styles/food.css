.product-section {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    /* 100% faz ser expansível e adaptável. */
    height: calc(100% - var(--navbar-height));
    padding: 1rem 16rem 1rem 16rem;
}

.category-banner {
    height: 15vh;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    background: var(--info);
    border: 1px solid var(--accent2);
    border-radius: 0.5rem;
}

.category-filter {
    height: 10%;
    width: 100%;
    display: flex;
    justify-content: flex-start;
    gap: 1rem;
    padding: 1rem;
    align-items: center;
    border: 1px solid var(--accent2);
    border-radius: 0.5rem;
}

.category-filter-row {
    display: flex;
    flex-direction: row;
    gap: 8px;
}

.filter {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 8px;
    padding: 8px;
    border: 1px solid var(--dark);
    border-radius: 0.25rem;
}

.filter i {
    color: var(--dark);
}

.product-list-box {
    height: 100%;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    border: 1px solid var(--accent2);
    border-radius: 0.5rem;
}

.product-row {
    width: 100%;
    padding: 1rem;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1rem;
}

/* ProductCard Component */

/* Determino tamanho fixo aqui. */
.product-card {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    border: 1px solid var(--accent2);
    border-radius: 0.5rem;
    height: 500px;
    width: auto;
    padding: 1rem;
    gap: 1rem;
}

.product-info-name-price {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

/* Como o tamanho do product-cart está fixo, posso fazer tamanho relativo. */
.product-picture {
    width: 100%;
    height: 70%;
    border-radius: 0.5rem;
    background: black;
}

.product-card button {
    width: 100%;
}
